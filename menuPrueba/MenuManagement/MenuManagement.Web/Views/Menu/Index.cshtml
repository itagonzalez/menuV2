@model IEnumerable<MenuManagement.Domain.Entities.MenuItem>

@{
    ViewData["Title"] = "Gestión de Menús";
    ViewData["Breadcrumb"] = "<li class='breadcrumb-item'><a href='/'>Inicio</a></li><li class='breadcrumb-item active'>Gestión de Menús</li>";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-sitemap text-primary me-2"></i>
            Gestión de Menús
        </h2>
        <p class="text-muted mb-0">Administre la estructura jerárquica de menús del sistema</p>
    </div>
    <div>
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Nuevo Menú
        </a>
        <a href="@Url.Action("Demo")" class="btn btn-outline-info">
            <i class="fas fa-eye me-2"></i>Ver Demo
        </a>
    </div>
</div>

<!-- Stats Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Count()</h4>
                        <small>Total Elementos</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-list fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Count(m => m.ParentId == null)</h4>
                        <small>Menús Principales</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-home fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Count(m => m.ParentId != null)</h4>
                        <small>Submenús</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-layer-group fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Count(m => !string.IsNullOrEmpty(m.Link))</h4>
                        <small>Con Enlaces</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-link fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-search"></i>
                    </span>
                    <input type="text" id="searchInput" class="form-control" placeholder="Buscar menús por nombre...">
                </div>
            </div>
            <div class="col-md-3">
                <select id="levelFilter" class="form-select">
                    <option value="">Todos los niveles</option>
                    <option value="0">Solo principales</option>
                    <option value="1">Primer nivel</option>
                    <option value="2">Segundo nivel</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="linkFilter" class="form-select">
                    <option value="">Todos</option>
                    <option value="with-link">Con enlace</option>
                    <option value="without-link">Sin enlace</option>
                </select>
            </div>
        </div>
    </div>
</div>

<!-- Menu Tree View -->
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-tree me-2"></i>Estructura de Menús
            </h5>
            <div class="btn-group btn-group-sm" role="group">
                <button type="button" class="btn btn-outline-secondary" id="expandAllBtn">
                    <i class="fas fa-expand-arrows-alt me-1"></i>Expandir Todo
                </button>
                <button type="button" class="btn btn-outline-secondary" id="collapseAllBtn">
                    <i class="fas fa-compress-arrows-alt me-1"></i>Colapsar Todo
                </button>
                <button type="button" class="btn btn-outline-secondary" id="refreshBtn">
                    <i class="fas fa-sync-alt me-1"></i>Actualizar
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div id="menuTreeContainer">
                @await Html.PartialAsync("_MenuTree", Model.Where(m => m.ParentId == null).OrderBy(m => m.Order))
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-folder-open fa-4x text-muted mb-3"></i>
                <h4 class="text-muted">No hay menús configurados</h4>
                <p class="text-muted">Comience creando su primer elemento de menú</p>
                <a href="@Url.Action("Create")" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Crear Primer Menú
                </a>
            </div>
        }
    </div>
</div>

<!-- Bulk Actions Modal -->
<div class="modal fade" id="bulkActionsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Acciones en Lote</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Seleccione la acción a realizar sobre los elementos marcados:</p>
                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-outline-danger" onclick="bulkDelete()">
                        <i class="fas fa-trash me-2"></i>Eliminar Seleccionados
                    </button>
                    <button type="button" class="btn btn-outline-warning" onclick="bulkReorder()">
                        <i class="fas fa-sort me-2"></i>Reordenar
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            const searchInput = $('#searchInput');
            const levelFilter = $('#levelFilter');
            const linkFilter = $('#linkFilter');

            // Debounced search function
            const debouncedSearch = Utils.debounce(function() {
                filterMenuItems();
            }, 300);

            searchInput.on('input', debouncedSearch);
            levelFilter.on('change', filterMenuItems);
            linkFilter.on('change', filterMenuItems);

            // Expand/Collapse functionality
            $('#expandAllBtn').on('click', function() {
                $('.menu-children').show();
                $('.toggle-children').removeClass('fa-plus').addClass('fa-minus');
            });

            $('#collapseAllBtn').on('click', function() {
                $('.menu-children').hide();
                $('.toggle-children').removeClass('fa-minus').addClass('fa-plus');
            });

            // Refresh functionality
            $('#refreshBtn').on('click', function() {
                location.reload();
            });

            // Initialize tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Initialize sortable for reordering
            if (typeof Sortable !== 'undefined') {
                initializeSortable();
            }
        });

        // Filter menu items based on search and filters
        function filterMenuItems() {
            const searchTerm = $('#searchInput').val().toLowerCase();
            const levelFilter = $('#levelFilter').val();
            const linkFilter = $('#linkFilter').val();

            $('.menu-item-container').each(function() {
                const $container = $(this);
                const name = $container.find('.menu-name').text().toLowerCase();
                const level = $container.data('level') || 0;
                const hasLink = $container.find('.menu-link').length > 0;

                let show = true;

                // Apply search filter
                if (searchTerm && !name.includes(searchTerm)) {
                    show = false;
                }

                // Apply level filter
                if (levelFilter && level.toString() !== levelFilter) {
                    show = false;
                }

                // Apply link filter
                if (linkFilter === 'with-link' && !hasLink) {
                    show = false;
                } else if (linkFilter === 'without-link' && hasLink) {
                    show = false;
                }

                $container.toggle(show);
            });
        }

        // Toggle children visibility
        function toggleChildren(element, menuId) {
            const $children = $('#children-' + menuId);
            const $icon = $(element).find('i');

            if ($children.is(':visible')) {
                $children.slideUp();
                $icon.removeClass('fa-minus').addClass('fa-plus');
            } else {
                $children.slideDown();
                $icon.removeClass('fa-plus').addClass('fa-minus');
            }
        }

        // Delete menu item with confirmation
        function deleteMenuItem(id, name) {
            Utils.confirmAction(
                `¿Está seguro de eliminar "${name}" y todos sus submenús?`,
                'Confirmar eliminación',
                function() {
                    $.ajax({
                        url: '@Url.Action("Delete")/' + id,
                        type: 'POST',
                        success: function(response) {
                            if (response.success) {
                                Utils.showSuccess('Menú eliminado correctamente');
                                $('#menu-item-' + id).fadeOut(300, function() {
                                    $(this).remove();
                                });
                            } else {
                                Utils.showError(response.message || 'Error al eliminar el menú');
                            }
                        },
                        error: function() {
                            Utils.showError('Error de conexión al eliminar el menú');
                        }
                    });
                }
            );
        }

        // Initialize drag & drop sorting
        function initializeSortable() {
            $('.menu-children').each(function() {
                new Sortable(this, {
                    animation: 150,
                    ghostClass: 'sortable-ghost',
                    onEnd: function(evt) {
                        updateMenuOrder(evt.to);
                    }
                });
            });
        }

        // Update menu order after drag & drop
        function updateMenuOrder(container) {
            const items = [];
            $(container).children('.menu-item-container').each(function(index) {
                items.push({
                    id: $(this).data('id'),
                    order: index + 1
                });
            });

            $.ajax({
                url: '@Url.Action("UpdateOrder")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(items),
                success: function(response) {
                    if (response.success) {
                        Utils.showSuccess('Orden actualizado correctamente');
                    } else {
                        Utils.showError('Error al actualizar el orden');
                        location.reload(); // Reload to restore original order
                    }
                },
                error: function() {
                    Utils.showError('Error de conexión al actualizar el orden');
                    location.reload();
                }
            });
        }

        // Bulk actions
        function bulkDelete() {
            const selectedItems = $('.menu-checkbox:checked');
            if (selectedItems.length === 0) {
                Utils.showError('Seleccione al menos un elemento');
                return;
            }

            const ids = selectedItems.map(function() {
                return $(this).val();
            }).get();

            Utils.confirmAction(
                `¿Está seguro de eliminar ${selectedItems.length} elementos?`,
                'Eliminación en lote',
                function() {
                    $.ajax({
                        url: '@Url.Action("BulkDelete")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(ids),
                        success: function(response) {
                            if (response.success) {
                                Utils.showSuccess(`${response.deletedCount} elementos eliminados`);
                                location.reload();
                            } else {
                                Utils.showError(response.message);
                            }
                        }
                    });
                }
            );

            $('#bulkActionsModal').modal('hide');
        }
    </script>
}